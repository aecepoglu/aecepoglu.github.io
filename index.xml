<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>aecepoglu</title>
    <link>/</link>
    <description>Recent content on aecepoglu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 12 Aug 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Bileşke Fonksiyon (compose), Birleştirebilme (Composability), Değişemezlik (Immutability)</title>
      <link>/posts/immutability/</link>
      <pubDate>Mon, 12 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/posts/immutability/</guid>
      <description>Sıradan bir iş günü. JavaScript&amp;#8217;te tablolarımızdan birisine sayfalar arasında geçiş yaparken veri indir/kaldır yapma kabiliyeti ekliyorum (halk arasında buna &#34;pagination&#34; diyorlar). retrieveItems diye ve drawItems diye birer metod yazdım. retrieveItemsAndDraw yazıp cözüme ulaşmak üzereyken şu kodu yazdığımı farkediyorum:
 const retrieveAndDrawItems = R.compose(drawItems, retrieveItems)   Ekip arkadaşlarımdan birisi bu satırda n&amp;#8217;aptığımı sorduğunda &#34;Basit!&#34; diye cevaplıyorum, &#34;Aslında olay myCompose = fs &amp;#8658; x0 &amp;#8658; fs.reverse().reduce((x, f) &amp;#8658; f(x), x0)den ibaret~&#34;.</description>
    </item>
    
    <item>
      <title>NodeJS&#39;te Maybe Monad&#39;ını Kullanarak REPL-Destekli Kod Yazma</title>
      <link>/posts/repl-driven-development/</link>
      <pubDate>Sun, 28 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>/posts/repl-driven-development/</guid>
      <description>http://discuss.ocaml.org &#39;u açıyorum; uzun zamandır portfolyomu fonksiyonel yaklaşımlar ve diller konusunda zenginleştirmekteyim ve de aktif bir iş arayışındayım. İnternette bir OCaml ilanı var ise orada bulabileceğimden eminim.
 Komşu başlıklardan birisinde &#34;Closure&amp;#8217;da REPL Driven Development&#34; yapmanın ne kadar keyifli olduğunu, acaba OCaml&amp;#8217;da da bunun mümkün olup olmadığı tartışılıyor.
  I want to define “Repl based development” not as “occasionally use the REPL”, but something like this:
 we start a REPL we type code in some editor, and continuously “send last expression” to the REPL, and we look at the new output eventually, we clean up the buffer a bit and store it as code</description>
    </item>
    
    <item>
      <title></title>
      <link>/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/about/</guid>
      <description>E-posta: aec \\@ mm \\. st
 </description>
    </item>
    
  </channel>
</rss>